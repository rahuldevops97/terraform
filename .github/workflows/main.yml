name: dt-infra-pillar-pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform:
    name: Terraform Workflow
    runs-on: ubuntu-latest
    env:
      TF_VERSION: "1.5.5" # Specify Terraform version
      AWS_REGION: "us-east-1" # Replace with your AWS region

    steps:
      # Checkout the Repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Cache Terraform Modules and Docker Images (if needed)
      - name: Cache Terraform Modules
        uses: actions/cache@v3
        with:
          path: ~/.terraform
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/*.tf', '**/*.tfvars') }}
          restore-keys: |
            ${{ runner.os }}-terraform-

      # Set Up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      # Terraform Format Check
      - name: Check Terraform Format
        run: terraform fmt -check -diff

      # Terraform Validate
      - name: Validate Terraform Configuration
        run: |
          terraform init -backend-config=backend.tfvars
          terraform validate

      # Terraform Plan
      - name: Terraform Plan
        run: |
          terraform init -backend-config=backend.tfvars
          terraform plan -var-file=variables.tfvars -out=tfplan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ env.AWS_REGION }}
        continue-on-error: true
        id: plan

      # Save Plan Output
      - name: Upload Terraform Plan Artifact
        if: steps.plan.outcome == 'success'
        uses: actions/upload-artifact@v3
        with:
          name: tfplan
          path: tfplan

      # Run Checkov Security Scan (Using Docker Image)
      - name: Run Checkov Security Scan (via Docker)
        run: |
          docker pull bridgecrew/checkov:latest
          docker run --rm -v $(pwd):/mnt bridgecrew/checkov:latest /mnt
        continue-on-error: true

      # Run Checkov Security Scan (Fallback - Direct Install)
      - name: Install and Run Checkov (Fallback)
        if: failure()
        run: |
          pip install checkov
          checkov -d .

      # Terraform Apply (Only for Main Branch)
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: |
          terraform init -backend-config=backend.tfvars
          terraform apply -var-file=variables.tfvars -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ env.AWS_REGION }}
